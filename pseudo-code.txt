PRINTING BOXES
1. Print top bar
2. Print the main text
3. print top-lower bar
    4. Print contents of the window
5. Print lower bar
    this lower bar would get the input from the user
numbers 1-3 and 5 are repetitive tasks

// the scope is too wide. this function is vague
CONTENT DISPLAY FUNCTION
/* This function accepts an array of strings and calculates how much
    whitespaces are needed to put contents enlcosing the box */
1. Checks if the format would be centered or justified.
2. if the format is centered
    a. voidIsOdd = 0
    b. if (((CONTENT_WIDTH - LEN_OF_ELEMENT) % 2) == 1)
        voidisOdd = 1
    c. nNumWhitespace = (CONTENT_WIDTH - len of element) / 2
    b. While i < num_of_elements
        printWhitespace(nNumWhitespace)
        printf(array[i])
        if voidIsOdd == 1
            printWhitespace(nNumWhitespace + 1)
        else 
            printWhitespace(nNumWhitespace)
3. if the format is justified


PRINT_CHOICES_FUNCTION
/* this function displays an array of strings that would be formatted.
    it can print in a grid format (2x2)(4x1), etc...
    it accepts input whether it would print it in justified or centered. 
    it comes with predefined colors. */
1. check what type of indention is required
2. if it is centered
    a. 


MAIN MENU CONTENTS FUNCTION
1. Displaying the pokeball
    while i < elements of pokeball
        (CONTENT_WIDTH - WIDTH_OF POKEBALL) / 2
            this is how much whitespace to put before the pokeball
            printwhitespace(num)
        print the pokeball
        (CONTENT_WIDTH - WIDTH_OF POKEBALL) / 2
            this is how much whitespace to put after the pokeball
            if len of elements is odd
                printwhitespace(num + 1)
            else
                printWhitespace(num)
2. Displaying input choices
    printChoices(menu, 2, 2, 'c')
